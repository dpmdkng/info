import { Component } from '@angular/core';
import { IonicPage, NavController, ToastController, MenuController, Platform } from 'ionic-angular';
import { TranslateService } from '@ngx-translate/core';
import { User, SplitPane } from '../../providers/providers';
import { HomePage } from '../pages';

export interface FieldUsers 
{
  email: string
  password: string
}

@IonicPage()
@Component({
  selector: 'page-login',
  templateUrl: 'login2.html'
})
export class LoginPage 
{
  rootPage: any;
  tmpSplitReturn: boolean;
  dataField: any;
  account: FieldUsers;
  private loginErrorString: string;
  private emailString: string;
  private passwordString: string;

  constructor(
    public navCtrl: NavController,
    public splitState: SplitPane, 
    public platform: Platform, 
    public menu: MenuController, 
    public user: User,
    public toastCtrl: ToastController,
    public translateService: TranslateService) 
  {
    this.translateService.get(['LOGIN_ERROR', 'EMAIL', 'PASSWORD']).subscribe((value) => {
      this.loginErrorString = value.LOGIN_ERROR;
      this.emailString = value.EMAIL;
      this.passwordString = value.PASSWORD;
    })

    this.tmpSplitReturn = this.platform.width() > 900 ? true : null;
    this.loadFieldData();
  }

  loadFieldData()
  {
    this.dataField = [
      {field: 'email', label:this.emailString, placeholder:'nama@domain', type: 'email', value:''},
      {field: 'password', label:this.passwordString, placeholder:'*****', type: 'password', value:''}
    ];
  }

  // Attempt to login in through our User service
  doLogin() 
  {
    this.user.login({
      init: 'users-login',
      pack: this.account
    }).subscribe((resp) => {
      if(this.user._globalUserData == null)
      {
        let toast = this.toastCtrl.create({
          message: this.user._globalUserMessage,
          duration: 5000,
          position: 'top'
        });
        toast.present();
      }
      else
      {
        this.navCtrl.setRoot(HomePage, {}, {
          animate: true,
          direction: 'forward'
        })
        .then(() => {
          this.splitState.interuptSplitState(this.tmpSplitReturn);
          this.menu.enable(true, 'sideMainMenu');
        });
      }
    }, 
    (err) => {
      let toast = this.toastCtrl.create({
        message: this.loginErrorString,
        duration: 3000,
        position: 'top'
      });
      toast.present();
    });
  }
}
